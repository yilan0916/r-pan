<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 模块名称， 影响日志配置名，日志文件名 -->
    <property name="appName" value="r-pan-server-dev"/>
    <!--rootPath 日志路径，这里是相对路径，web项目eclipse下会输出到eclipse的安装目录下，如果部署到linux上的tomcat下，会输出到tomcat/bin目录 下 -->
    <property name="rootPath" value="logs"/>
    <!--logPattern 日志文件大小上限 -->
    <property name="logMaxSize" value="10MB"/>
    <!--logPattern 日志输出格式 -->
    <property name="logPattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{TRACE_ID}] [%thread]  %-5level %logger{36} - %msg%n"/>
    <contextName>${appName}</contextName>

    <!--控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>

    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 设置日志不超过${logMaxSize}时的保存路径，注意如果 是web项目会保存到Tomcat的bin目录下 -->
        <file>${rootPath}/${appName}-debug.log</file>
        <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${rootPath}/${appName}/all/debug/%d{yyyy-MM-dd}-%i.log.zip</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>30</maxHistory>
            <!-- 单个日志文件最大100M，到了这个值，就会再创建一个日志文件，日志文件的名字最后+1 -->
            <maxFileSize>${logMaxSize}</maxFileSize>
            <!-- 所有的日志文件最大20G，超过就会删除旧的日志 -->
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!-- 日志输出的文件的格式  -->
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!--
           此日志文件只记录debug级别的
           onMatch和onMismatch都有三个属性值，分别为Accept、DENY和NEUTRAL
           onMatch="ACCEPT" 表示匹配该级别及以上
           onMatch="DENY" 表示不匹配该级别及以上
           onMatch="NEUTRAL" 表示该级别及以上的，由下一个filter处理，如果当前是最后一个，则表示匹配该级别及以上
           onMismatch="ACCEPT" 表示匹配该级别以下
           onMismatch="NEUTRAL" 表示该级别及以下的，由下一个filter处理，如果当前是最后一个，则不匹配该级别以下的
           onMismatch="DENY" 表示不匹配该级别以下的
       -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>

    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${rootPath}/${appName}-info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${rootPath}/${appName}/all/info/%d{yyyy-MM-dd}-%i.log.zip</fileNamePattern>
            <maxHistory>30</maxHistory>
            <maxFileSize>${logMaxSize}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${rootPath}/${appName}-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${rootPath}/${appName}/all/error/%d{yyyy-MM-dd}-%i.log.zip</fileNamePattern>
            <maxHistory>30</maxHistory>
            <maxFileSize>${logMaxSize}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--日志的输出级别由低到高（越来问题越严重）trace->debug->info->warn->error -->
    <!-- root将级别为DEBUG及大于DEBUG的日志信息交给已经配置好的name='STDOUT'的appender处理，将信息打印到控制台-Console -->
    <root level="INFO">
        <!-- appender-ref标识这个appender将会添加到本应用的日志系统中 -->
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="INFO"/>
        <appender-ref ref="DEBUG"/>
        <appender-ref ref="ERROR"/>
    </root>

</configuration>